# -*- python -*-

import lsst.sconsUtils
import subprocess

dependencies = {}


class Configuration(lsst.sconsUtils.Configuration):

    def __init__(self):
        self.name, self.root = self.parseFilename(__file__)
        try:
            version, productDir = self.getEupsData(self.name)
            self.version = version
        except:
            pass

    def configure(self, conf, packages, check=False, build=True):
        lsst.sconsUtils.log.info("Configuring package '%s'." % self.name)
        try:
            output = subprocess.check_output(["python", "-c",
                                              "import numpy; print(numpy.get_include())"]).decode()
        except subprocess.CalledProcessError:
            return False
        conf.env.AppendUnique(XCPPPATH=output.split())
        return True

config = Configuration()
